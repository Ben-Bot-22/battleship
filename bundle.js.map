{"version":3,"file":"bundle.js","mappings":"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","sources":["/Users/ben/Documents/dev-projects/odin-project/battleship/src/dom.ts","/Users/ben/Documents/dev-projects/odin-project/battleship/src/game-board.ts","/Users/ben/Documents/dev-projects/odin-project/battleship/src/index.ts","/Users/ben/Documents/dev-projects/odin-project/battleship/src/player.ts","/Users/ben/Documents/dev-projects/odin-project/battleship/src/ship.ts","webpack/bootstrap","webpack/before-startup","webpack/startup","webpack/after-startup"],"sourcesContent":["import { humanPlayer, botPlayer } from './player';\nimport { endGame } from './index';\n\nconst playerGridDiv: HTMLElement = document.getElementById('player-grid')!;\nconst botGridDiv: HTMLElement = document.getElementById('bot-grid')!;\nconst botStats: HTMLElement = document.getElementById('bot-stats')!;\nconst playerStats: HTMLElement = document.getElementById('player-stats')!;\n\nexport function createPlayerGrid() {\n  createGrid(playerGridDiv);\n}\n\nexport function createBotGrid() {\n  createGrid(botGridDiv, true);\n}\n\nfunction createGrid(div: HTMLElement, isBot = false) {\n  for (let row = 0; row < 10; row++) {\n    for (let col = 0; col < 10; col++) {\n      const coord = document.createElement('div');\n      coord.classList.add('coord');\n      coord.dataset.row = `${row}`;\n      coord.dataset.col = `${col}`;\n      if (isBot) {\n        coord.classList.add('bot');\n        // add attack to track mouse over bot grid\n        coord.addEventListener('click', attack);\n      } else {\n        coord.classList.add('player');\n      }\n      if (div != null) div.appendChild(coord);\n    }\n  }\n}\n\nfunction attack(e: Event) {\n  const target = e.target as HTMLDivElement;\n  const row = parseInt(target.dataset.row!);\n  const col = parseInt(target.dataset.col!);\n  const shipHit = botPlayer.gameBoard.receiveAttack([row, col]);\n  target.classList.add('attacked');\n  if (shipHit) {\n    let message = 'Player hit a ship!';\n    if (botPlayer.gameBoard.isShipAtCoordSunk([row, col])) {\n      botStats.innerHTML = `${botPlayer.gameBoard.numShipsSunk()} sunk / 10`;\n      message = 'You sank a ship!';\n    }\n    target.innerHTML = '<span>X</span>';\n    alert(message);\n  }\n  if (botPlayer.gameBoard.allShipsSunk()) {\n    endGame('Player');\n  } else {\n    botAttack();\n  }\n}\n\nexport function botAttack() {\n  const coord = botPlayer.getTarget();\n  const shipHit = humanPlayer.gameBoard.receiveAttack(coord);\n  // get HTML element with id of bot and data-row and data-col\n  const target = document.querySelector(\n    `div.player[data-row=\"${coord[0]}\"][data-col=\"${coord[1]}\"]`\n  );\n  // console.log(target);\n  if (target !== null) target.classList.add('attacked');\n  if (shipHit) {\n    let message = 'Bot hit a ship!';\n    if (humanPlayer.gameBoard.isShipAtCoordSunk(coord)) {\n      //   increment 0 sunk at the bottom of BOT grid\n      playerStats.innerHTML = `${humanPlayer.gameBoard.numShipsSunk()} sunk / 10`;\n      message = 'Bot sank a ship!';\n    }\n    if (target !== null) target.innerHTML = '<span>X</span>';\n    alert(message);\n  }\n  if (humanPlayer.gameBoard.allShipsSunk()) {\n    endGame('Bot');\n  }\n}\n\nexport function resetDOM() {\n  // remove ship classes from all coords\n  const coords = document.querySelectorAll('.coord');\n  coords.forEach((coord) => {\n    // remove attacked, remove x, remove ship\n    coord.classList.remove('attacked');\n    coord.innerHTML = '';\n    coord.classList.remove('ship');\n  });\n}\n\nexport function displayPlayerShips() {\n  // for each coordinate in player gameboard, add ship class\n  for (const coord of humanPlayer.gameBoard.board) {\n    if (coord.ship !== null) {\n      // get HTML element with id of player and data-row and data-col\n      const target = document.querySelector(\n        `div#player-grid div[data-row=\"${coord.coord[0]}\"][data-col=\"${coord.coord[1]}\"]`\n      );\n      if (target !== null) target.classList.add('ship');\n    }\n  }\n}\n\n// Visibility of bot ships for testing purposes\nexport function displayBotShips() {\n  // for each coordinate in player gameboard, add ship class\n  for (const coord of botPlayer.gameBoard.board) {\n    if (coord.ship !== null) {\n      // get HTML element with id of player and data-row and data-col\n      const target = document.querySelector(\n        `div#bot-grid div[data-row=\"${coord.coord[0]}\"][data-col=\"${coord.coord[1]}\"]`\n      );\n      if (target !== null) target.classList.add('ship');\n    }\n  }\n}\n","import { Ship, createShip } from './ship';\n\nexport class Coordinate {\n  coord: [number, number];\n  attacked: boolean;\n  ship: Ship | null = null;\n  shipIndex: number | null = null;\n  constructor(coord: [number, number]) {\n    this.coord = coord;\n    this.attacked = false;\n    this.ship = null;\n    this.shipIndex = null;\n  }\n}\n\nexport class GameBoard {\n  board: Coordinate[] = [];\n  ships: Ship[] = [];\n  SIZE = 10;\n  constructor() {\n    for (let i = 0; i < this.SIZE; i++) {\n      for (let j = 0; j < this.SIZE; j++) {\n        const coord = new Coordinate([i, j]);\n        this.board.push(coord);\n      }\n    }\n  }\n  getCoord(coord: [number, number]) {\n    return this.board.find(\n      (c) => c.coord[0] === coord[0] && c.coord[1] === coord[1]\n    );\n  }\n  shipInBounds(\n    length: number,\n    startCoord: [number, number],\n    isHorizontal: boolean\n  ): boolean {\n    // if coord is on board\n    if (this.getCoord(startCoord)) {\n      // check if length is clear in direction\n      if (isHorizontal) {\n        if (startCoord[0] + length < this.SIZE) {\n          return true;\n        }\n      } else if (startCoord[1] + length < this.SIZE) {\n        return true;\n      }\n    }\n    return false;\n  }\n  placeShip(coord: [number, number], length: number, isHorizontal: boolean) {\n    // if ship is in bounds, set has ship to true\n    const ship = createShip(length);\n    this.ships.push(ship);\n    const coordObj = this.getCoord(coord);\n    if (coordObj) {\n      coordObj.ship = ship;\n      coordObj.shipIndex = 0;\n      // mark hasShip true for ship length\n      for (let i = 1; i < length; i++) {\n        let nextShipCoord = null;\n        if (isHorizontal) {\n          nextShipCoord = this.getCoord([coord[0] + i, coord[1]]);\n        } else {\n          nextShipCoord = this.getCoord([coord[0], coord[1] + i]);\n        }\n        if (nextShipCoord) {\n          nextShipCoord.ship = ship;\n          nextShipCoord.shipIndex = i;\n        }\n      }\n    }\n  }\n  getRandomCoord(): [number, number] {\n    return [Math.floor(Math.random() * 10), Math.floor(Math.random() * 10)];\n  }\n  getRandomDirection() {\n    return Math.random() < 0.5;\n  }\n  shipOverlap(\n    length: number,\n    startCoord: [number, number],\n    isHorizontal: boolean\n  ) {\n    // check if ship will overlap another ship\n    const coordObj = this.getCoord(startCoord);\n    if (coordObj && coordObj.ship !== null) {\n      return true;\n    }\n    for (let i = 1; i < length; i++) {\n      if (isHorizontal) {\n        const nextCoord = this.getCoord([startCoord[0] + i, startCoord[1]]);\n        if (nextCoord && nextCoord.ship !== null) {\n          return true;\n        }\n      } else {\n        const nextCoord = this.getCoord([startCoord[0], startCoord[1] + i]);\n        if (nextCoord && nextCoord.ship !== null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  validShipPlacement(\n    length: number,\n    startCoord: [number, number],\n    isHorizontal: boolean\n  ) {\n    return (\n      this.shipInBounds(length, startCoord, isHorizontal) &&\n      !this.shipOverlap(length, startCoord, isHorizontal)\n    );\n  }\n  randomShipPlacement(length: number) {\n    let startCoord = this.getRandomCoord();\n    let isHorizontal = this.getRandomDirection();\n    while (!this.validShipPlacement(length, startCoord, isHorizontal)) {\n      startCoord = this.getRandomCoord();\n      isHorizontal = this.getRandomDirection();\n    }\n    // console.log('PLACE SHIP: ', startCoord, length, isHorizontal);\n    this.placeShip(startCoord, length, isHorizontal);\n  }\n  placeShipsRandomly() {\n    // 1 4-length ship\n    this.randomShipPlacement(4); // 4\n    // 2 3-length ships\n    for (let i = 0; i < 2; i++) {\n      // 6\n      this.randomShipPlacement(3);\n    }\n    // 3 2-length ships\n    for (let i = 0; i < 3; i++) {\n      // 6\n      this.randomShipPlacement(2);\n    }\n    // 4 1-length ships\n    for (let i = 0; i < 4; i++) {\n      // 4\n      this.randomShipPlacement(1);\n    }\n  }\n  receiveAttack(coord: [number, number]) {\n    // check if ship is hit\n    const coordObj = this.getCoord(coord);\n    if (coordObj) {\n      coordObj.attacked = true;\n      if (coordObj.ship !== null && coordObj.shipIndex !== null) {\n        coordObj.ship.hit(coordObj.shipIndex);\n        return true;\n      }\n    }\n    return false;\n  }\n  isShipAtCoordSunk(coord: [number, number]): boolean {\n    const coordObj = this.getCoord(coord);\n    if (coordObj) {\n      if (coordObj.ship !== null) {\n        return this.isSunk(coordObj.ship);\n      }\n    }\n    return false;\n  }\n  isSunk(ship: Ship) {\n    // console.log(ship.hits);\n    for (const hit of ship.hits) {\n      if (!hit) {\n        return false;\n      }\n    }\n    return true;\n  }\n  numShipsSunk(): number {\n    let sunk = 0;\n    for (const ship of this.ships) {\n      if (this.isSunk(ship)) {\n        sunk++;\n      }\n    }\n    return sunk;\n  }\n  allShipsSunk(): boolean {\n    for (const ship of this.ships) {\n      const sunk = this.isSunk(ship);\n      if (!sunk) return false;\n    }\n    return true;\n  }\n}\n","// import { GameBoard } from './game-board';\nimport { humanPlayer, botPlayer } from './player';\nimport {\n  createPlayerGrid,\n  createBotGrid,\n  displayPlayerShips,\n  displayBotShips,\n  resetDOM\n} from './dom';\n\nfunction initGame() {\n  createPlayerGrid();\n  createBotGrid();\n  humanPlayer.gameBoard.placeShipsRandomly();\n  botPlayer.gameBoard.placeShipsRandomly();\n  displayPlayerShips();\n  // displayBotShips(); // testing purposes\n}\n\nfunction resetGame() {\n  // reset gameboards for both players\n  humanPlayer.resetGameBoard();\n  botPlayer.resetGameBoard();\n  resetDOM();\n  humanPlayer.gameBoard.placeShipsRandomly();\n  botPlayer.gameBoard.placeShipsRandomly();\n  displayPlayerShips();\n  // displayBotShips(); // testing purposes\n}\n\nexport function endGame(winner: string) {\n  alert(`${winner} wins!`);\n  alert('Play again?');\n  resetGame();\n}\n\ninitGame();\n","import { GameBoard } from './game-board';\n\nclass Player {\n  name: string;\n  gameBoard: GameBoard;\n  constructor(name: string, gameBoard: GameBoard) {\n    this.name = name;\n    this.gameBoard = gameBoard;\n  }\n  resetGameBoard() {\n    this.gameBoard = new GameBoard();\n  }\n}\n\nclass BotAI extends Player {\n  attackHistory: [number, number][] = [];\n  getRandomCoord() {\n    return Math.floor(Math.random() * this.gameBoard.SIZE);\n  }\n  searchAttackHistory(coord: [number, number]) {\n    return this.attackHistory.find(\n      (c) => c[0] === coord[0] && c[1] === coord[1]\n    );\n  }\n  getTarget() {\n    // get random coord on player board\n    let randCoord: [number, number] = [\n      this.getRandomCoord(),\n      this.getRandomCoord()\n    ];\n    // check if coord is in attacks array, if so, get new coord\n    while (this.searchAttackHistory(randCoord)) {\n      randCoord = [this.getRandomCoord(), this.getRandomCoord()];\n    }\n    return randCoord;\n  }\n}\n\nexport const humanPlayer = new Player('Human', new GameBoard());\nexport const botPlayer = new BotAI('Bot', new GameBoard());\n","export type Ship = {\n  length: number;\n  hits: boolean[];\n  hit: (index: number) => void;\n};\n\nexport function createShip(length: number, hits: boolean[] = []): Ship {\n  for (let i = 0; i < length; i++) {\n    hits.push(false);\n  }\n  return {\n    length,\n    hits,\n    hit(index: number) {\n      hits[index] = true;\n    }\n  };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}